Index: app/src/main/java/com/example/tinnhn/taikhoan/ThemAnhActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.tinnhn.taikhoan;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.tinnhn.R;\r\nimport com.google.android.gms.tasks.Continuation;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageMetadata;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.IOException;\r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\nimport java.util.Calendar;\r\n\r\npublic class ThemAnhActivity extends AppCompatActivity {\r\n\r\n    FirebaseStorage storage = FirebaseStorage.getInstance(\"gs://duan1-f124f.appspot.com\");\r\n    StorageReference storageRef = storage.getReference();\r\n    ImageView ivHinh, ivHinhTaiVe;\r\n    Button btnThem, btnTaiHinh;\r\n    int REQUEST_CODE_IMAGE = 1;\r\n    String linkURLImage = \"\";\r\n    String TAG = \"ThemAnhActivity\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_them_anh);\r\n\r\n        ThemHinh();\r\n        HienHinh();\r\n    }\r\n\r\n    private void HienHinh() {\r\n        ivHinhTaiVe = findViewById(R.id.ivHinhTaiVe);\r\n        btnTaiHinh = findViewById(R.id.btnTaiHinh);\r\n        btnTaiHinh.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (linkURLImage != null) {\r\n                    new DownloadImageTask(ivHinhTaiVe).execute(linkURLImage);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void ThemHinh() {\r\n        ivHinh = findViewById(R.id.ivHinh);\r\n        ivHinh.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                // camera\r\n                Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n                startActivityForResult(intent, REQUEST_CODE_IMAGE);\r\n                // chọn hình từ bộ sưu tập\r\n//                asdf;\r\n                //\r\n            }\r\n        });\r\n        btnThem = findViewById(R.id.btnThem);\r\n        btnThem.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Calendar calendar = Calendar.getInstance();\r\n                StorageReference mountainsRef = storageRef.child(\"hinhanh_\" + calendar.getTimeInMillis());\r\n                ivHinh.setDrawingCacheEnabled(true);\r\n                ivHinh.buildDrawingCache();\r\n                Bitmap bitmap = ((BitmapDrawable) ivHinh.getDrawable()).getBitmap();\r\n                ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n                bitmap.compress(Bitmap.CompressFormat.PNG, 100, baos);\r\n                byte[] data = baos.toByteArray();\r\n                UploadTask uploadTask = mountainsRef.putBytes(data);\r\n                uploadTask.addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception exception) {\r\n                        Toast.makeText(ThemAnhActivity.this, \"NOT OK \", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                    @Override\r\n                    public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                        StorageMetadata metadata = taskSnapshot.getMetadata();\r\n                        Log.d(TAG, \"onSuccess: \" + metadata);\r\n//                        Toast.makeText(ThemAnhActivity.this, \"OK: \" + metadata, Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }).continueWithTask(new Continuation<UploadTask.TaskSnapshot, Task<Uri>>() {\r\n                    @Override\r\n                    public Task<Uri> then(@NonNull Task<UploadTask.TaskSnapshot> task) throws Exception {\r\n                        if (!task.isSuccessful()) {\r\n                            throw task.getException();\r\n                        }\r\n                        return mountainsRef.getDownloadUrl();\r\n                    }\r\n                }).addOnCompleteListener(new OnCompleteListener<Uri>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<Uri> task) {\r\n                        if (task.isSuccessful()) {\r\n                            Uri downloadUri = task.getResult();\r\n                            linkURLImage = downloadUri.toString();\r\n                            Toast.makeText(ThemAnhActivity.this, \"downloadUri: \" + linkURLImage, Toast.LENGTH_SHORT).show();\r\n                            Log.d(TAG, \"onComplete: \" + linkURLImage);\r\n                        } else {\r\n                            // ...\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == REQUEST_CODE_IMAGE && resultCode == RESULT_OK && data != null) {\r\n            Bitmap bitmap = (Bitmap) data.getExtras().get(\"data\");\r\n            ivHinh.setImageBitmap(bitmap);\r\n        }\r\n    }\r\n}\r\n\r\n//                    URL url = null;\r\n//                    try {\r\n//                        url = new URL(linkURLImage);\r\n//                    } catch (MalformedURLException e) {\r\n//                        e.printStackTrace();\r\n//                    }\r\n//                    Bitmap bmp = null;\r\n//                    try {\r\n//                        bmp = BitmapFactory.decodeStream(url.openConnection().getInputStream());\r\n//                    } catch (IOException e) {\r\n//                        e.printStackTrace();\r\n//                    }\r\n//                    ivHinhTaiVe.setImageBitmap(bmp);\r\n\r\n//                Task<Uri> urlTask = uploadTask.continueWithTask(new Continuation<UploadTask.TaskSnapshot, Task<Uri>>() {\r\n//                    @Override\r\n//                    public Task<Uri> then(@NonNull Task<UploadTask.TaskSnapshot> task) throws Exception {\r\n//                        if (!task.isSuccessful()) {\r\n//                            throw task.getException();\r\n//                        }\r\n//\r\n//                        // Continue with the task to get the download URL\r\n//                        return mountainsRef.getDownloadUrl();\r\n//                    }\r\n//                }).addOnCompleteListener(new OnCompleteListener<Uri>() {\r\n//                    @Override\r\n//                    public void onComplete(@NonNull Task<Uri> task) {\r\n//                        if (task.isSuccessful()) {\r\n//                            Uri downloadUri = task.getResult();\r\n//                            linkURLImage = downloadUri.toString();\r\n//                            Toast.makeText(ThemAnhActivity.this, \"downloadUri: \" + linkURLImage, Toast.LENGTH_SHORT).show();\r\n//                            Log.d(TAG, \"onComplete: \" + linkURLImage);\r\n//                        } else {\r\n//                            // Handle failures\r\n//                            // ...\r\n//                        }\r\n//                    }\r\n//                });
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/tinnhn/taikhoan/ThemAnhActivity.java	(revision bf700e1e1350d1bcde08c4bc72a69a1f2efc7cd3)
+++ app/src/main/java/com/example/tinnhn/taikhoan/ThemAnhActivity.java	(date 1606485593126)
@@ -48,7 +48,6 @@
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_them_anh);
-
         ThemHinh();
         HienHinh();
     }
@@ -75,7 +74,7 @@
                 Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
                 startActivityForResult(intent, REQUEST_CODE_IMAGE);
                 // chọn hình từ bộ sưu tập
-//                asdf;
+//                err;
                 //
             }
         });
@@ -95,14 +94,13 @@
                 uploadTask.addOnFailureListener(new OnFailureListener() {
                     @Override
                     public void onFailure(@NonNull Exception exception) {
-                        Toast.makeText(ThemAnhActivity.this, "NOT OK ", Toast.LENGTH_SHORT).show();
+                        Toast.makeText(ThemAnhActivity.this, "98 NOT OK ", Toast.LENGTH_SHORT).show();
                     }
                 }).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {
                     @Override
                     public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {
                         StorageMetadata metadata = taskSnapshot.getMetadata();
-                        Log.d(TAG, "onSuccess: " + metadata);
-//                        Toast.makeText(ThemAnhActivity.this, "OK: " + metadata, Toast.LENGTH_SHORT).show();
+                        Log.d(TAG, "104 onSuccess: " + metadata);
                     }
                 }).continueWithTask(new Continuation<UploadTask.TaskSnapshot, Task<Uri>>() {
                     @Override
@@ -118,8 +116,8 @@
                         if (task.isSuccessful()) {
                             Uri downloadUri = task.getResult();
                             linkURLImage = downloadUri.toString();
-                            Toast.makeText(ThemAnhActivity.this, "downloadUri: " + linkURLImage, Toast.LENGTH_SHORT).show();
-                            Log.d(TAG, "onComplete: " + linkURLImage);
+                            Toast.makeText(ThemAnhActivity.this, "121 downloadUri: " + linkURLImage, Toast.LENGTH_SHORT).show();
+                            Log.d(TAG, "122 onComplete: " + linkURLImage);
                         } else {
                             // ...
                         }
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_27_11_2020_07_58__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_27_11_2020_07_58__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_20_11_2020_22_31__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_20_11_2020_22_31__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_11_25_2020_4_10_PM__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_11_25_2020_4_10_PM__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_24_11_2020_21_51__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_24_11_2020_21_51__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_11_25_2020_4_10_PM__Default_Changelist_1.xml .idea/shelf/Uncommitted_changes_before_Update_at_11_25_2020_4_10_PM__Default_Changelist_1.xml
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_25_11_2020_14_42__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_25_11_2020_14_42__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_25_11_2020_16_15__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_25_11_2020_16_15__Default_Changelist_.xml
